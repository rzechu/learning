version: '3.8'

services:
   # --- Config Servers ---
   cfgsvr1:
    image: mongo:6.0
    container_name: cfgsvr1
    command: > # Multi-line command
      bash -c "mongod --configsvr --replSet cfgReplSet --port 27017 --bind_ip_all
      && mongosh --port 27017 /docker-entrypoint-initdb.d/init_config_rs.js"
    volumes:
      - cfg1-data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d # Mount init scripts
    networks:
      - mongoshard-net
    mem_limit: 512m
    mem_swappiness: 0

   cfgsvr2:
    image: mongo:6.0
    container_name: cfgsvr2
    command: mongod --configsvr --replSet cfgReplSet --port 27017 --bind_ip_all
    volumes:
      - cfg2-data:/data/db
    networks:
      - mongoshard-net
    mem_limit: 512m
    mem_swappiness: 0

   cfgsvr3:
    image: mongo:6.0
    container_name: cfgsvr3
    command: mongod --configsvr --replSet cfgReplSet --port 27017 --bind_ip_all
    volumes:
      - cfg3-data:/data/db
    networks:
      - mongoshard-net
    mem_limit: 512m
    mem_swappiness: 0

   # --- Shard 1 Replica Set ---
   shard1a:
    image: mongo:6.0
    container_name: shard1a
    command: >
      bash -c "mongod --shardsvr --replSet shard1ReplSet --port 27017 --bind_ip_all
      && mongosh --port 27017 /docker-entrypoint-initdb.d/init_shard1_rs.js"
    volumes:
      - shard1a-data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d # Mount init scripts
    networks:
      - mongoshard-net
    mem_limit: 512m
    mem_swappiness: 0

   shard1b:
    image: mongo:6.0
    container_name: shard1b
    command: mongod --shardsvr --replSet shard1ReplSet --port 27017 --bind_ip_all
    volumes:
      - shard1b-data:/data/db
    networks:
      - mongoshard-net
    mem_limit: 512m
    mem_swappiness: 0

   # --- Shard 2 Replica Set ---
   shard2a:
    image: mongo:6.0
    container_name: shard2a
    command: >
      bash -c "mongod --shardsvr --replSet shard2ReplSet --port 27017 --bind_ip_all
      && mongosh --port 27017 /docker-entrypoint-initdb.d/init_shard2_rs.js"
    volumes:
      - shard2a-data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d # Mount init scripts
    networks:
      - mongoshard-net
    mem_limit: 512m
    mem_swappiness: 0

   shard2b:
    image: mongo:6.0
    container_name: shard2b
    command: mongod --shardsvr --replSet shard2ReplSet --port 27017 --bind_ip_all
    volumes:
      - shard2b-data:/data/db
    networks:
      - mongoshard-net
    mem_limit: 512m
    mem_swappiness: 0

   # --- Mongos (Query Router) ---
   mongos1:
    image: mongo:6.0
    container_name: mongos1
    # Command to start mongos, then run the sharding setup script
    command: >
      bash -c "mongos --port 27017 --configdb cfgReplSet/cfgsvr1:27017,cfgsvr2:27017,cfgsvr3:27017 --bind_ip_all
      && mongosh --port 27017 /docker-entrypoint-initdb.d/setup_sharding.js"
    ports:
      - "27017:27017" # Expose mongos port for client applications
    networks:
      - mongoshard-net
    depends_on:
      - cfgsvr1
      - cfgsvr2
      - cfgsvr3
      - shard1a # Ensure shards are started too
      - shard2a # Ensure shards are started too
    mem_limit: 512m
    mem_swappiness: 0

   sharding.webapi:
    build:
      context: ./Sharding.WebApi
      dockerfile: Dockerfile
    image: sharding-webapi:latest
    container_name: sharding-webapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "8080:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - mongoshard-net
    depends_on:
      - mongos1

volumes:
  cfg1-data:
  cfg2-data:
  cfg3-data:
  shard1a-data:
  shard1b-data:
  shard2a-data:
  shard2b-data:

networks:
  mongoshard-net:
    driver: bridge